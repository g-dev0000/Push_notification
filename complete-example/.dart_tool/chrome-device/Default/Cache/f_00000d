define(['dart_sdk', 'packages/awesome_notifications_example/models/media_model.dart', 'packages/awesome_notifications_example/utils/playback_timer.dart'], (function load__packages__awesome_notifications_example__utils__media_player_central_dart(dart_sdk, packages__awesome_notifications_example__models__media_model$46dart, packages__awesome_notifications_example__utils__playback_timer$46dart) {
  'use strict';
  const core = dart_sdk.core;
  const math = dart_sdk.math;
  const async = dart_sdk.async;
  const _interceptors = dart_sdk._interceptors;
  const dart = dart_sdk.dart;
  const dartx = dart_sdk.dartx;
  const media_model = packages__awesome_notifications_example__models__media_model$46dart.models__media_model;
  const playback_timer = packages__awesome_notifications_example__utils__playback_timer$46dart.utils__playback_timer;
  var media_player_central = Object.create(dart.library);
  var $isEmpty = dartx.isEmpty;
  var $length = dartx.length;
  var $_get = dartx._get;
  var $isNotEmpty = dartx.isNotEmpty;
  var $contains = dartx.contains;
  var $add = dartx.add;
  var $addAll = dartx.addAll;
  var $remove = dartx.remove;
  var $clear = dartx.clear;
  dart._checkModuleNullSafetyMode(true);
  var T = {
    DurationToNull: () => (T.DurationToNull = dart.constFn(dart.fnType(core.Null, [core.Duration])))(),
    JSArrayOfMediaModel: () => (T.JSArrayOfMediaModel = dart.constFn(_interceptors.JSArray$(media_model.MediaModel)))(),
    StreamControllerOfMediaModel: () => (T.StreamControllerOfMediaModel = dart.constFn(async.StreamController$(media_model.MediaModel)))(),
    StreamControllerOfDuration: () => (T.StreamControllerOfDuration = dart.constFn(async.StreamController$(core.Duration)))()
  };
  var T$Eval = Object.assign({
    _: () => T$Eval
  }, T);
  var S = {
    _: () => S
  };
  var S$Eval = Object.assign({
    _: () => S$Eval
  }, S);
  const CT = Object.create({
    _: () => (C, CT)
  });
  dart.defineLazy(CT, {
    get C0() {
      return C[0] = dart.const({
        __proto__: media_player_central.MediaLifeCycle.prototype,
        [_name$]: "MediaLifeCycle.Stopped",
        index: 0
      });
    },
    get C1() {
      return C[1] = dart.const({
        __proto__: media_player_central.MediaLifeCycle.prototype,
        [_name$]: "MediaLifeCycle.Paused",
        index: 1
      });
    },
    get C2() {
      return C[2] = dart.const({
        __proto__: media_player_central.MediaLifeCycle.prototype,
        [_name$]: "MediaLifeCycle.Playing",
        index: 2
      });
    },
    get C3() {
      return C[3] = dart.constList([C[0] || CT.C0, C[1] || CT.C1, C[2] || CT.C2], media_player_central.MediaLifeCycle);
    }
  }, false);
  var C = Array(4).fill(void 0);
  var I = [
    "file:///E:/plugins/awesome_notifications/example/lib/utils/media_player_central.dart",
    "package:awesome_notifications_example/utils/media_player_central.dart"
  ];
  var _name$ = dart.privateName(media_player_central, "_name");
  media_player_central.MediaLifeCycle = class MediaLifeCycle extends core.Object {
    toString() {
      return this[_name$];
    }
  };
  (media_player_central.MediaLifeCycle.new = function(index, _name) {
    if (index == null) dart.nullFailed(I[0], 7, 6, "index");
    if (_name == null) dart.nullFailed(I[0], 7, 6, "_name");
    this.index = index;
    this[_name$] = _name;
    ;
  }).prototype = media_player_central.MediaLifeCycle.prototype;
  dart.addTypeTests(media_player_central.MediaLifeCycle);
  dart.addTypeCaches(media_player_central.MediaLifeCycle);
  dart.setLibraryUri(media_player_central.MediaLifeCycle, I[1]);
  dart.setFieldSignature(media_player_central.MediaLifeCycle, () => ({
    __proto__: dart.getFields(media_player_central.MediaLifeCycle.__proto__),
    index: dart.finalFieldType(core.int),
    [_name$]: dart.finalFieldType(core.String)
  }));
  dart.defineExtensionMethods(media_player_central.MediaLifeCycle, ['toString']);
  media_player_central.MediaLifeCycle.Stopped = C[0] || CT.C0;
  media_player_central.MediaLifeCycle.Paused = C[1] || CT.C1;
  media_player_central.MediaLifeCycle.Playing = C[2] || CT.C2;
  media_player_central.MediaLifeCycle.values = C[3] || CT.C3;
  media_player_central.MediaPlayerCentral = class MediaPlayerCentral extends core.Object {
    static getCloseCaption(duration) {
      let t0, t0$;
      if (duration == null) dart.nullFailed(I[0], 28, 42, "duration");
      if (dart.test((t0$ = (t0 = media_player_central.MediaPlayerCentral.currentMedia, t0 == null ? null : t0.closeCaption[$isEmpty]), t0$ == null ? true : t0$))) return "";
      for (let cc of dart.nullCheck(media_player_central.MediaPlayerCentral.currentMedia).closeCaption) {
        if (dart.test(cc.start['<='](duration)) && dart.test(cc.end['>='](duration))) return cc.subtitle;
      }
      return "";
    }
    get mediaBroadcaster() {
      return media_player_central.MediaPlayerCentral._mediaBroadcaster.stream;
    }
    get mediaProgress() {
      return media_player_central.MediaPlayerCentral._mediaProgress.stream;
    }
    static get index() {
      return media_player_central.MediaPlayerCentral._index;
    }
    static set index(index) {
      if (index == null) dart.nullFailed(I[0], 59, 24, "index");
      media_player_central.MediaPlayerCentral._index = math.min(core.int, media_player_central.MediaPlayerCentral._playlist[$length], math.max(core.int, 0, index));
    }
    static get currentDuration() {
      return media_player_central.MediaPlayerCentral._timer.now;
    }
    static get isPlaying() {
      return media_player_central.MediaPlayerCentral._lifeCycle == media_player_central.MediaLifeCycle.Playing;
    }
    static get mediaLifeCycle() {
      return media_player_central.MediaPlayerCentral._lifeCycle;
    }
    static get currentMedia() {
      return media_player_central.MediaPlayerCentral._playlist[$length] === 0 ? null : media_player_central.MediaPlayerCentral._playlist[$_get](media_player_central.MediaPlayerCentral._index);
    }
    static get hasAnyMedia() {
      return media_player_central.MediaPlayerCentral._playlist[$isNotEmpty];
    }
    static get hasNextMedia() {
      return dart.test(media_player_central.MediaPlayerCentral.hasAnyMedia) && dart.notNull(media_player_central.MediaPlayerCentral.index) < dart.notNull(media_player_central.MediaPlayerCentral._playlist[$length]) - 1;
    }
    static get hasPreviousMedia() {
      return dart.test(media_player_central.MediaPlayerCentral.hasAnyMedia) && dart.notNull(media_player_central.MediaPlayerCentral.index) > 0;
    }
    static get mediaStream() {
      return media_player_central.MediaPlayerCentral._mediaBroadcaster.stream;
    }
    static get progressStream() {
      return media_player_central.MediaPlayerCentral._mediaProgress.stream;
    }
    static get mediaSink() {
      return media_player_central.MediaPlayerCentral._mediaBroadcaster.sink;
    }
    static get progressSink() {
      return media_player_central.MediaPlayerCentral._mediaProgress.sink;
    }
    static _broadcastChanges() {
      media_player_central.MediaPlayerCentral._mediaBroadcaster.sink.add(dart.nullCheck(media_player_central.MediaPlayerCentral.currentMedia));
      media_player_central.MediaPlayerCentral._mediaProgress.sink.add(media_player_central.MediaPlayerCentral._timer.now);
    }
    static add(newMedia) {
      if (newMedia == null) dart.nullFailed(I[0], 93, 30, "newMedia");
      if (dart.test(media_player_central.MediaPlayerCentral._playlist[$contains](newMedia))) {
      } else {
        media_player_central.MediaPlayerCentral._playlist[$add](newMedia);
      }
    }
    static addAll(newMedias) {
      let t0;
      if (newMedias == null) dart.nullFailed(I[0], 100, 39, "newMedias");
      t0 = media_player_central.MediaPlayerCentral._playlist;
      (() => {
        t0[$addAll](newMedias);
        return t0;
      })();
    }
    static remove(oldMedia) {
      if (oldMedia == null) dart.nullFailed(I[0], 104, 33, "oldMedia");
      if (dart.equals(media_player_central.MediaPlayerCentral.currentMedia, oldMedia)) {
        media_player_central.MediaPlayerCentral._timer.stop();
        media_player_central.MediaPlayerCentral._playlist[$remove](oldMedia);
        media_player_central.MediaPlayerCentral._broadcastChanges();
      } else {
        media_player_central.MediaPlayerCentral._playlist[$remove](oldMedia);
      }
    }
    static clear() {
      media_player_central.MediaPlayerCentral._playlist[$clear]();
      media_player_central.MediaPlayerCentral.stop();
    }
    static playPause() {
      switch (media_player_central.MediaPlayerCentral._lifeCycle) {
        case C[0] || CT.C0:
        case C[1] || CT.C1:
        {
          media_player_central.MediaPlayerCentral._lifeCycle = media_player_central.MediaLifeCycle.Playing;
          media_player_central.MediaPlayerCentral._timer.playPause(dart.nullCheck(media_player_central.MediaPlayerCentral.currentMedia).trackSize);
          media_player_central.MediaPlayerCentral._broadcastChanges();
          break;
        }
        case C[2] || CT.C2:
        {
          media_player_central.MediaPlayerCentral._lifeCycle = media_player_central.MediaLifeCycle.Paused;
          media_player_central.MediaPlayerCentral._timer.playPause(dart.nullCheck(media_player_central.MediaPlayerCentral.currentMedia).trackSize);
          media_player_central.MediaPlayerCentral._broadcastChanges();
          break;
        }
      }
    }
    static stop() {
      media_player_central.MediaPlayerCentral._lifeCycle = media_player_central.MediaLifeCycle.Stopped;
      media_player_central.MediaPlayerCentral._timer.stop();
      media_player_central.MediaPlayerCentral._broadcastChanges();
    }
    static goTo(moment) {
      if (moment == null) dart.nullFailed(I[0], 142, 29, "moment");
      media_player_central.MediaPlayerCentral._timer.goTo(moment);
      media_player_central.MediaPlayerCentral._lifeCycle = dart.test(media_player_central.MediaPlayerCentral._timer.isPlaying) ? media_player_central.MediaLifeCycle.Playing : media_player_central.MediaPlayerCentral._lifeCycle;
      media_player_central.MediaPlayerCentral._broadcastChanges();
    }
    static nextMedia() {
      if (dart.test(media_player_central.MediaPlayerCentral.hasNextMedia)) {
        media_player_central.MediaPlayerCentral._index = dart.notNull(media_player_central.MediaPlayerCentral._index) + 1;
      }
      switch (media_player_central.MediaPlayerCentral._lifeCycle) {
        case C[0] || CT.C0:
        {
          media_player_central.MediaPlayerCentral._timer.stop();
          media_player_central.MediaPlayerCentral._lifeCycle = media_player_central.MediaLifeCycle.Stopped;
          break;
        }
        case C[1] || CT.C1:
        {
          media_player_central.MediaPlayerCentral._timer.stop();
          media_player_central.MediaPlayerCentral._lifeCycle = media_player_central.MediaLifeCycle.Paused;
          break;
        }
        case C[2] || CT.C2:
        {
          media_player_central.MediaPlayerCentral._timer.stop();
          media_player_central.MediaPlayerCentral._timer.playPause(dart.nullCheck(media_player_central.MediaPlayerCentral.currentMedia).trackSize);
          media_player_central.MediaPlayerCentral._lifeCycle = media_player_central.MediaLifeCycle.Playing;
          break;
        }
      }
      media_player_central.MediaPlayerCentral._broadcastChanges();
    }
    static previousMedia() {
      if (dart.test(media_player_central.MediaPlayerCentral.hasPreviousMedia)) {
        if (dart.test(media_player_central.MediaPlayerCentral._timer.now['<'](media_player_central.MediaPlayerCentral.replayTolerance))) {
          media_player_central.MediaPlayerCentral._index = dart.notNull(media_player_central.MediaPlayerCentral._index) - 1;
        }
      }
      switch (media_player_central.MediaPlayerCentral._lifeCycle) {
        case C[2] || CT.C2:
        {
          media_player_central.MediaPlayerCentral._timer.stop();
          media_player_central.MediaPlayerCentral._timer.playPause(dart.nullCheck(media_player_central.MediaPlayerCentral.currentMedia).trackSize);
          media_player_central.MediaPlayerCentral._lifeCycle = media_player_central.MediaLifeCycle.Playing;
          break;
        }
        case C[1] || CT.C1:
        {
          media_player_central.MediaPlayerCentral._timer.stop();
          media_player_central.MediaPlayerCentral._lifeCycle = media_player_central.MediaLifeCycle.Paused;
          break;
        }
        case C[0] || CT.C0:
        {
          break;
        }
      }
      media_player_central.MediaPlayerCentral._broadcastChanges();
    }
    dispose() {
      media_player_central.MediaPlayerCentral._mediaBroadcaster.sink.close();
      media_player_central.MediaPlayerCentral._mediaProgress.sink.close();
    }
  };
  (media_player_central.MediaPlayerCentral.new = function() {
    ;
  }).prototype = media_player_central.MediaPlayerCentral.prototype;
  dart.addTypeTests(media_player_central.MediaPlayerCentral);
  dart.addTypeCaches(media_player_central.MediaPlayerCentral);
  dart.setMethodSignature(media_player_central.MediaPlayerCentral, () => ({
    __proto__: dart.getMethods(media_player_central.MediaPlayerCentral.__proto__),
    dispose: dart.fnType(dart.dynamic, [])
  }));
  dart.setGetterSignature(media_player_central.MediaPlayerCentral, () => ({
    __proto__: dart.getGetters(media_player_central.MediaPlayerCentral.__proto__),
    mediaBroadcaster: async.Stream$(media_model.MediaModel),
    mediaProgress: async.Stream$(core.Duration)
  }));
  dart.setLibraryUri(media_player_central.MediaPlayerCentral, I[1]);
  dart.defineLazy(media_player_central.MediaPlayerCentral, {
    /*media_player_central.MediaPlayerCentral._timer*/get _timer() {
      return new playback_timer.PlaybackTimer.new({onDone: dart.fn(duration => {
          if (duration == null) dart.nullFailed(I[0], 16, 25, "duration");
          if (dart.test(media_player_central.MediaPlayerCentral.hasNextMedia)) {
            media_player_central.MediaPlayerCentral.nextMedia();
          } else {
            media_player_central.MediaPlayerCentral.stop();
          }
        }, T.DurationToNull()), onData: dart.fn(duration => {
          if (duration == null) dart.nullFailed(I[0], 23, 25, "duration");
          media_player_central.MediaPlayerCentral._mediaProgress.add(media_player_central.MediaPlayerCentral._timer.now);
        }, T.DurationToNull())});
    },
    /*media_player_central.MediaPlayerCentral.replayTolerance*/get replayTolerance() {
      return new core.Duration.new({seconds: 4});
    },
    set replayTolerance(_) {},
    /*media_player_central.MediaPlayerCentral._index*/get _index() {
      return 0;
    },
    set _index(_) {},
    /*media_player_central.MediaPlayerCentral._lifeCycle*/get _lifeCycle() {
      return media_player_central.MediaLifeCycle.Stopped;
    },
    set _lifeCycle(_) {},
    /*media_player_central.MediaPlayerCentral._playlist*/get _playlist() {
      return T.JSArrayOfMediaModel().of([]);
    },
    set _playlist(_) {},
    /*media_player_central.MediaPlayerCentral._mediaBroadcaster*/get _mediaBroadcaster() {
      return T.StreamControllerOfMediaModel().broadcast();
    },
    set _mediaBroadcaster(_) {},
    /*media_player_central.MediaPlayerCentral._mediaProgress*/get _mediaProgress() {
      return T.StreamControllerOfDuration().broadcast();
    },
    set _mediaProgress(_) {}
  }, false);
  dart.trackLibraries("packages/awesome_notifications_example/utils/media_player_central.dart", {
    "package:awesome_notifications_example/utils/media_player_central.dart": media_player_central
  }, {
  }, '{"version":3,"sourceRoot":"","sources":["media_player_central.dart"],"names":[],"mappings":"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","file":"../../../../../packages/awesome_notifications_example/utils/media_player_central.dart.lib.js"}');
  // Exports:
  return {
    utils__media_player_central: media_player_central
  };
}));

//# sourceMappingURL=media_player_central.dart.lib.js.map
